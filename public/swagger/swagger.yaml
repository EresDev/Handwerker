swagger: '2.0'
info:
  description: |
    This is Handwerker API documentation.  You can find
    out more about it at
    [https://github.com/EresDev/Handwerker](https://github.com/EresDev/Handwerker)
  version: 1.0.0
  title: Handwerker
  contact:
    email: hi@eresdev.com
# host: petstore.swagger.io
# basePath: /v2
tags:
  - name: Job
    description: Operations about jobs
  - name: User
    description: Operations about user
# schemes:
# - http
paths:
  /job:
    post:
      tags:
        - Job
      summary: Add a new job
      operationId: createJob
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/titleJob'
        - $ref: '#/parameters/zipCodeJob'
        - $ref: '#/parameters/cityJob'
        - $ref: '#/parameters/descriptionJob'
        - $ref: '#/parameters/executionDateTimeJob'
        - $ref: '#/parameters/categoryIdJob'
      responses:
        201:
          description: The entity added successfully. It return UUID of newly created entity.
          schema:
            type: object
            properties:
              uuid:
                type: string
                description: The UUID of newly created Job
                example: 'ccae6db1-165f-43d9-ad91-48c40a4d1ea4'
        422:
          description: Operation failed. There were validation errors.
          schema:
            type: array
            example: [{"title":"The title cannot be blank."},{"zipCode":"Zip code cannot be blank."},{"city":"The city cannot be blank."},{"executionDateTime":"The execution DateTime must be after 24 hours from now."}]
      security:
        - JWT: []
    put:
      tags:
        - Job
      summary: Update an existing job
      operationId: updateJob
      consumes:
        - 'application/x-www-form-urlencoded'
      produces:
        - application/json
      parameters:
        - in: body
          name: job
          schema:
            $ref: "#/definitions/JobUpdateModel"

      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Pet not found
        405:
          description: Validation exception
      security:
        - JWT: []
  /job/{jobId}:
    get:
      tags:
        - Job
      summary: Find job by ID
      description: Returns a single job
      operationId: getJobById
      produces:
        - application/json
      parameters:
        - name: jobId
          in: path
          description: ID of job to return
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: Invalid ID supplied
        404:
          description: Job not found
      security:
        - JWT: []
    # delete:
    #   tags:
    #   - pet
    #   summary: Deletes a pet
    #   operationId: deletePet
    #   produces:
    #   - application/json
    #   - application/xml
    #   parameters:
    #   - name: api_key
    #     in: header
    #     required: false
    #     type: string
    #   - name: petId
    #     in: path
    #     description: Pet id to delete
    #     required: true
    #     type: integer
    #     format: int64
    #   responses:
    #     400:
    #       description: Invalid ID supplied
    #     404:
    #       description: Pet not found
    #   security:
    #   - petstore_auth:
    #     - write:pets
    #     - read:pets
  /login_check:
    post:
      tags:
        - User
      summary: Authenticate user and get a JWT Token
      consumes:
        - application/json
      operationId: login
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                example: auth_user2@eresdev.com
              password:
                type: string
                example: somePassword1145236

      responses:
        200:
          description: Successful login. The response includes JWT token.
          schema:
            type: object
            properties:
              token:
                type: string
                description: The JWT token
                example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1Nzc3NDM5MDgsImV4cCI6MTU3Nzc0NzUwOCwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoiYXV0aF91c2VyMkBlcmVzZGV2LmNvbSJ9.G0IdX3epSaCxJxG78a93AoAZqDBi5TUmdQ3xslQoRP4t4uWMA4ipTowhX-jK5Z53L8aOyzGYZ72xtVajFbgrqT6ZEv7686HsxTm2w9txlD3Cudvchz-69WUTN475YA33Yc-u3OPxgpGvT1YdcGuTgSWyb5bkaIVGKUkh8U8PyOZCgrG03y4Hm4VLt5YjadbsWwLlWQwZM-XLGTJ-L9ZPDBnnHMgy0wjqIWSfdbE6ncC12n82Id1IIz1BfHG7gvrVKajmhD9yTVgYEfH5H-cM5HZmkXkuF1ArVgyDYckV-Xb0j0QY2E5deldwCJKTBIrYBfcNvpLpvm3a9m3mAQ4MuJJOftACiIYiIhJ7N1NAJwiLFdAYe54cBhDciQevEQ6TRGGBUUnEHX7Iq2UlxDd9OpMgkR2QKST1pi_UAbEUorA1gq7N-sOcCs-eyAxhmvV5YGFtuMiYNnsGGpI49eqMIbvqLs2ReUlfr_3RIXrS5vE_NRdqCBw7hWDQxs_65vIbtOhNTh-jCyj6_5y5W-zaS4Kdxmjq4jmACdP6BLZzuWmGEvtGEe6uRYHAH4MCJkVjt24Bh38Sb0PfXE21Gx4fVPlkjXC2-yNN9uRe5_ErWH3WJx7dGGeU56gSr7G1BHS7Su526NdxdpH7owHjlV7kkDYgBj_xEKS9xnjFMgq1kqw"
        401:
          description: Failed login attempt.
          schema:
            type: object
            properties:
              code:
                type: number
                example: 401
              message:
                type: string
                description: Error message according to the problem
                example: Invalid credentials.
  /user:
    post:
      tags:
        - User
      summary: Register user
      operationId: registerUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
securityDefinitions:
  JWT:
    type: apiKey
    in: header
    name: Authorization
definitions:
  # Category:
  #   type: object
  #   properties:
  #     id:
  #       type: integer
  #       format: int64
  #     name:
  #       type: string
  #   xml:
  #     name: Category
  User:
    type: object
    properties:
      uuid:
        type: string
        example: 2ec7edae-99f8-4481-99a6-83f8cc236cb2
      email:
        type: string
        example: auth_user2@eresdev.com
      password:
        type: string
        example: somePassword1145236
  Job:
    type: object
    required:
      - name
      - photoUrls
    properties:
      uuid:
        type: string
        description: UUID v4
        example: 2e487e8d-1c4d-4484-b783-0e9d2c62051c

  JobUpdateModel:
    allOf:
      - type: object
        properties:
          uuid:
            type: string
            description: UUID v4
            example: 2e487e8d-1c4d-4484-b783-0e9d2c62051c
      - $ref: '#/definitions/JobCreateModel'

  JobCreateModel:
    type: object
    required:
      - title
      - zipCode
      - city
      - executionDateTime
      - description
      - categoryId
    properties:
      title:
        type: string
        minLength: 5
        maxLength: 100
        example: An example title
      zipCode:
        type: string
        minLength: 6
        maxLength: 6
        example: 10115
      city:
        type: string
        minLength: 3
        maxLength: 50
        example: Berlin
      description:
        type: string
        maxLength: 250
        example: An example description
      executionDateTime:
        type: number
        description: Job execution datetime in Unix timestamp form
        example: 1609459200
      categoryId:
        type: string
        description: UUID of an existing category
        example: 0d195d63-cdc3-4286-90c9-0d6bb8e913ce
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string


parameters:
  #Fields for Job operations
  uuidJob:
    in: formData
    name: uuid
    required: true
    type: string
    description: UUID v4
    default: 2e487e8d-1c4d-4484-b783-0e9d2c62051c
  titleJob:
    in: formData
    name: title
    required: true
    type: string
    minLength: 5
    maxLength: 100
    default: An example title
  zipCodeJob:
    in: formData
    name: zipCode
    required: true
    type: string
    minLength: 5
    maxLength: 5
    default: 10115
  cityJob:
    in: formData
    name: city
    type: string
    required: true
    minLength: 3
    maxLength: 50
    default: Berlin
  descriptionJob:
    in: formData
    name: description
    type: string
    maxLength: 250
    default: An example description
  executionDateTimeJob:
    in: formData
    name: executionDateTime
    required: true
    type: number
    description: Job execution datetime in Unix timestamp form
    default: 1609459200
  categoryIdJob:
    in: formData
    name: categoryId
    required: true
    type: string
    description: UUID of an existing category
    default: 0d195d63-cdc3-4286-90c9-0d6bb8e913ce


schemes:
  - http
host: handwerker.loc
basePath: /
