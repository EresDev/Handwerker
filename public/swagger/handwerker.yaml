swagger: '2.0'
info:
  description: |
    This is Handwerker API documentation.  You can find
    out more about it at
    [https://github.com/EresDev/Handwerker](https://github.com/EresDev/Handwerker)
  version: 1.0.0
  title: Handwerker
  contact:
    email: hi@eresdev.com
tags:
  - name: User
    description: Operations about user
  - name: Job
    description: Operations about jobs
consumes:
  - application/x-www-form-urlencoded
produces:
  - application/json
paths:
  /login_check:
    post:
      tags:
        - User
      summary: Authenticate user and get a JWT Token
      operationId: login
      parameters:
        - in: formData
          name: email
          required: true
          type: string
          default: auth_user2@eresdev.com
        - in: formData
          name: password
          required: true
          type: string
          minLength: 6
          maxLength: 4096
          default: somePassword1145236

      responses:
        200:
          description: Successful login. The response includes JWT token.
          schema:
            type: object
            properties:
              token:
                type: string
                description: The JWT token
                example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1Nzc3NDM5MDgsImV4cCI6MTU3Nzc0NzUwOCwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoiYXV0aF91c2VyMkBlcmVzZGV2LmNvbSJ9.G0IdX3epSaCxJxG78a93AoAZqDBi5TUmdQ3xslQoRP4t4uWMA4ipTowhX-jK5Z53L8aOyzGYZ72xtVajFbgrqT6ZEv7686HsxTm2w9txlD3Cudvchz-69WUTN475YA33Yc-u3OPxgpGvT1YdcGuTgSWyb5bkaIVGKUkh8U8PyOZCgrG03y4Hm4VLt5YjadbsWwLlWQwZM-XLGTJ-L9ZPDBnnHMgy0wjqIWSfdbE6ncC12n82Id1IIz1BfHG7gvrVKajmhD9yTVgYEfH5H-cM5HZmkXkuF1ArVgyDYckV-Xb0j0QY2E5deldwCJKTBIrYBfcNvpLpvm3a9m3mAQ4MuJJOftACiIYiIhJ7N1NAJwiLFdAYe54cBhDciQevEQ6TRGGBUUnEHX7Iq2UlxDd9OpMgkR2QKST1pi_UAbEUorA1gq7N-sOcCs-eyAxhmvV5YGFtuMiYNnsGGpI49eqMIbvqLs2ReUlfr_3RIXrS5vE_NRdqCBw7hWDQxs_65vIbtOhNTh-jCyj6_5y5W-zaS4Kdxmjq4jmACdP6BLZzuWmGEvtGEe6uRYHAH4MCJkVjt24Bh38Sb0PfXE21Gx4fVPlkjXC2-yNN9uRe5_ErWH3WJx7dGGeU56gSr7G1BHS7Su526NdxdpH7owHjlV7kkDYgBj_xEKS9xnjFMgq1kqw"
        401:
          description: Failed login attempt.
          schema:
            type: object
            properties:
              code:
                type: number
                example: 401
              message:
                type: string
                description: Error message according to the problem
                example: Invalid credentials.
  /user:
    post:
      tags:
        - User
      summary: Register user
      operationId: registerUser
      parameters:
        - $ref: '#/parameters/emailUser'
        - $ref: '#/parameters/passwordUser'
      responses:
        201:
          description: The entity added successfully. It return UUID of newly created entity.
          schema:
            type: object
            properties:
              status:
                type: string
                description: success|fail|error
                example: success
              data:
                type: object
                description: Validation error messages
                example: {"user":{"uuid":"241b8fcc-ea11-45d2-81de-82dc4210b464"}}
            example: {"status":"success","data":{"user":{"uuid":"241b8fcc-ea11-45d2-81de-82dc4210b464"}}}
        422:
          description: Operation failed. There were validation errors.
          schema:
            type: object
            properties:
              status:
                type: string
                description: success|fail|error
                example: fail
              data:
                type: object
                description: Validation error messages
                example: {"email":"The email provided is already registered."}
            example: {"status":"fail","data":{"email":"The email provided is already registered."}}

  /job:
    post:
      tags:
        - Job
      summary: Add a new job
      operationId: createJob
      parameters:
        - $ref: '#/parameters/titleJob'
        - $ref: '#/parameters/zipCodeJob'
        - $ref: '#/parameters/cityJob'
        - $ref: '#/parameters/descriptionJob'
        - $ref: '#/parameters/executionDateTimeJob'
        - $ref: '#/parameters/categoryIdJob'
      responses:
        201:
          description: The entity added successfully. It return UUID of newly created entity.
          schema:
            type: object
            properties:
              uuid:
                type: string
                description: The UUID of newly created Job
                example: 'ccae6db1-165f-43d9-ad91-48c40a4d1ea4'
        422:
          description: Operation failed. There were validation errors.
          schema:
            type: array
            items:
              type: object
            example: [{"title":"The title cannot be blank."},{"zipCode":"Zip code cannot be blank."},{"city":"The city cannot be blank."},{"executionDateTime":"The execution DateTime must be after 24 hours from now."}]
      security:
        - JWT: []
    put:
      tags:
        - Job
      summary: Update an existing job
      operationId: updateJob
      parameters:
        - $ref: '#/parameters/uuidJob'
        - $ref: '#/parameters/titleJob'
        - $ref: '#/parameters/zipCodeJob'
        - $ref: '#/parameters/cityJob'
        - $ref: '#/parameters/descriptionJob'
        - $ref: '#/parameters/executionDateTimeJob'
        - $ref: '#/parameters/categoryIdJob'
      responses:
        204:
          description: The entity updated successfully. No content is returned.
        422:
          description: Operation failed. There were validation errors.
          schema:
            type: array
            items:
              type: object
            example: [{"title":"The title cannot be blank."},{"zipCode":"Zip code cannot be blank."},{"city":"The city cannot be blank."},{"executionDateTime":"The execution DateTime must be after 24 hours from now."}]
      security:
        - JWT: []
  /job/{jobId}:
    get:
      tags:
        - Job
      summary: Find job by ID
      description: Returns a single job
      operationId: getJobById
      parameters:
        - name: jobId
          in: path
          description: Uuid of an existing job to return
          required: true
          type: string
          default: ccae6db1-165f-43d9-ad91-48c40a4d1ea4
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Job'
        404:
          description: Job with given ID not found. No content is returned.
      security:
        - JWT: []

    delete:
      tags:
        - Job
      summary: Delete an existing job
      operationId: deleteJob
      parameters:
        - name: jobId
          in: path
          description: Uuid of an existing job to delete
          required: true
          type: string
          default: ccae6db1-165f-43d9-ad91-48c40a4d1ea4
      responses:
        204:
          description: The entity deleted successfully. No content is returned.
        422:
          description: Operation failed. There were errors.
          schema:
            type: string
            example: "Requested job was not found. Delete operation failed."
      security:
        - JWT: []

securityDefinitions:
  JWT:
    type: apiKey
    in: header
    name: Authorization
definitions:
  User:
    type: object
    properties:
      uuid:
        type: string
        example: 2ec7edae-99f8-4481-99a6-83f8cc236cb2
      email:
        type: string
        example: auth_user2@eresdev.com
      password:
        type: string
        example: somePassword1145236
      activated:
        type: boolean
        example: true
        description: User is becomes active when they register. Later, it will be changed.
      deleted:
        type: boolean
        example: false
        description: A flag for soft delete. False by default.
      memberSince:
        type: string
        description: Unix timestamp
        example: 1609459200
      roles:
        type: array
        items:
          type: string
          example: ROLE_USER
  Job:
    type: object
    properties:
      uuid:
        type: string
        description: UUID v4
        example: 2e487e8d-1c4d-4484-b783-0e9d2c62051c
      title:
        type: string
        minLength: 5
        maxLength: 100
        example: An example title
      zipCode:
        type: string
        minLength: 6
        maxLength: 6
        example: 10115
      city:
        type: string
        minLength: 3
        maxLength: 50
        example: Berlin
      description:
        type: string
        maxLength: 250
        example: An example description
      executionDateTime:
        type: number
        description: Job execution datetime in Unix timestamp form
        example: 1609459200
      categoryId:
        type: string
        description: UUID of an existing category
        example: 0d195d63-cdc3-4286-90c9-0d6bb8e913ce
    example: {"uuid":"ccae6db1-165f-43d9-ad91-48c40a4d1ea4","title":"Kellersanierung","zipCode":"21521","city":"Hamburg","description":"Job descriptions from fixture.","executionDatetime":1578077766,"category":{"uuid":"0d195d63-cdc3-4286-90c9-0d6bb8e913ce","name":"Sonstige Umzugsleistungen"}}


parameters:
  #Fields for User operations
  uuidUser:
    in: formData
    name: uuid
    required: true
    type: string
    description: UUID v4
    default: 36a73721-02ff-4cb3-aa27-4aa308947f7c
  emailUser:
    in: formData
    name: email
    required: true
    type: string
    default: swagger@eresdev.com
  passwordUser:
    in: formData
    name: password
    required: true
    type: string
    minLength: 6
    maxLength: 4096
    default: def705973e4c662b9d8e934c5122ea64

  #Fields for Job operations
  uuidJob:
    in: formData
    name: uuid
    required: true
    type: string
    description: UUID v4
    default: ccae6db1-165f-43d9-ad91-48c40a4d1ea4
  titleJob:
    in: formData
    name: title
    required: true
    type: string
    minLength: 5
    maxLength: 100
    default: An example title
  zipCodeJob:
    in: formData
    name: zipCode
    required: true
    type: string
    minLength: 5
    maxLength: 5
    default: 10115
  cityJob:
    in: formData
    name: city
    type: string
    required: true
    minLength: 3
    maxLength: 50
    default: Berlin
  descriptionJob:
    in: formData
    name: description
    type: string
    maxLength: 250
    default: An example description
  executionDateTimeJob:
    in: formData
    name: executionDateTime
    required: true
    type: number
    description: Job execution datetime in Unix timestamp form
    default: 1609459200
  categoryIdJob:
    in: formData
    name: categoryId
    required: true
    type: string
    description: UUID of an existing category
    default: 0d195d63-cdc3-4286-90c9-0d6bb8e913ce

schemes:
  - http
host: handwerker.loc
basePath: /
