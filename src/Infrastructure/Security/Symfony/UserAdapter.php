<?php

declare(strict_types=1);

namespace App\Infrastructure\Security\Symfony;

use App\Domain\Entity\User;
use Symfony\Component\Security\Core\User\UserInterface;

class UserAdapter implements UserInterface
{
    private User $user;

    public function __construct(User $user)
    {
        $this->user = $user;
    }

    public function getPassword(): ?string
    {
        return $this->user->getPassword();
    }

    public function setPassword(string $password): void
    {
        $this->user->setPassword($password);
    }

    public function getRoles(): array
    {
        return $this->user->getRoles();
    }

    public function getUsername(): string
    {
        return $this->user->getEmail();
    }

    public function getSalt(): string
    {
        //Since php 7, random salt is auto-generated by hash_password and is stored with password
        return '';
    }

    public function eraseCredentials()
    {
        $this->setPassword('');
    }

    public function getEntity(): User
    {
        return $this->user;
    }
}
