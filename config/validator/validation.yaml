App\Application\Command\RegisterUserCommand:
  constraints:
    - App\Infrastructure\Validator\Symfony\UniqueEntityConstraint:
        entityClass: 'App\Domain\Entity\User'
        fields: [email]
        message: 'user.email.already.exists'
  properties:
    email:
      - NotBlank:
          message: 'user.invalid.email.notBlank'
      - Email:
          message: 'user.invalid.email'
    password:
      - NotBlank:
          message: 'user.invalid.password.notBlank'
      - Length:
          min: 6
          minMessage: 'user.invalid.password.minLength'
          max: 4096
          maxMessage: 'user.invalid.password.maxLength'

App\Application\Command\CreateJobCommand:
  constraints:
    - App\Infrastructure\Validator\Symfony\UniqueEntityConstraint:
        entityClass: 'App\Domain\Entity\Job'
        fields: [uuid]
        message: 'job.uuid.already.exists'
  properties:
    uuid:
      - Uuid:
          message: 'job.invalid.uuid.invalid'
    title:
      - NotBlank:
          message: 'job.invalid.title.notBlank'
      - Length:
          min: 5
          minMessage: 'job.invalid.title.minLength'
          max: 4096
          maxMessage: 'job.invalid.title.maxLength'
    zipCode:
      - NotBlank:
          message: 'job.invalid.zipCode.notBlank'
      - Length:
          min: 5
          minMessage: 'job.invalid.zipCode.minLength'
          max: 5
          maxMessage: 'job.invalid.zipCode.maxLength'
    city:
      - NotBlank:
          message: 'job.invalid.city.notBlank'
      - Length:
          min: 3
          minMessage: 'job.invalid.city.minLength'
          max: 50
          maxMessage: 'job.invalid.city.maxLength'
    description:
      - Length:
          max: 250
          maxMessage: 'job.invalid.description.maxLength'
    executionDateTime:
      - Type:
          type: \DateTime
          message: 'job.invalid.executionDateTime.DateTime'
      - GreaterThan:
          value: +1 day
          message: 'job.invalid.executionDateTime.mustBeInFuture'
    categoryId:
      - Uuid:
          message: 'job.invalid.category.uuid'


App\Application\Command\UpdateJobCommand:
  properties:
    uuid:
      - Uuid:
          message: 'job.invalid.uuid.invalid'
    title:
      - NotBlank:
          message: 'job.invalid.title.notBlank'
      - Length:
          min: 5
          minMessage: 'job.invalid.title.minLength'
          max: 4096
          maxMessage: 'job.invalid.title.maxLength'
    zipCode:
      - NotBlank:
          message: 'job.invalid.zipCode.notBlank'
      - Length:
          min: 5
          minMessage: 'job.invalid.zipCode.minLength'
          max: 5
          maxMessage: 'job.invalid.zipCode.maxLength'
    city:
      - NotBlank:
          message: 'job.invalid.city.notBlank'
      - Length:
          min: 3
          minMessage: 'job.invalid.city.minLength'
          max: 50
          maxMessage: 'job.invalid.city.maxLength'
    description:
      - Length:
          max: 250
          maxMessage: 'job.invalid.description.maxLength'
    executionDateTime:
      - Type:
          type: \DateTime
          message: 'job.invalid.executionDateTime.DateTime'
      - GreaterThan:
          value: +1 day
          message: 'job.invalid.executionDateTime.mustBeInFuture'
    categoryId:
      - Uuid:
          message: 'job.invalid.category.uuid'


App\Application\Query\GetJobQuery:
  properties:
    uuid:
      - NotBlank:
          message: 'job.invalid.uuid.invalid.notBlank'
      - Uuid:
          message: 'job.invalid.uuid.invalid'
